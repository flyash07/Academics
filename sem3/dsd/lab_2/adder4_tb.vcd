$date
	Tue Aug 22 15:15:37 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module adder4_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % k $end
$scope module uut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 ( i1 $end
$var wire 1 ) i2 $end
$var wire 1 * i3 $end
$var wire 1 + i4 $end
$var wire 1 % k $end
$var wire 4 , s [3:0] $end
$var wire 1 " cout $end
$var wire 3 - c [2:0] $end
$scope module add1 $end
$var wire 1 . a $end
$var wire 1 ( b $end
$var wire 1 % cin $end
$var wire 1 / cout $end
$var wire 1 0 s $end
$upscope $end
$scope module add2 $end
$var wire 1 1 a $end
$var wire 1 ) b $end
$var wire 1 2 cin $end
$var wire 1 3 cout $end
$var wire 1 4 s $end
$upscope $end
$scope module add3 $end
$var wire 1 5 a $end
$var wire 1 * b $end
$var wire 1 6 cin $end
$var wire 1 7 cout $end
$var wire 1 8 s $end
$upscope $end
$scope module add4 $end
$var wire 1 9 a $end
$var wire 1 + b $end
$var wire 1 : cin $end
$var wire 1 " cout $end
$var wire 1 ; s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1;
0:
19
18
07
16
05
04
13
02
11
00
0/
0.
b10 -
b1100 ,
0+
0*
1)
0(
b10 '
b1010 &
0%
b10 $
b1010 #
0"
b1100 !
$end
#20
0"
1;
0:
07
06
18
b0 -
03
10
b1111 !
b1111 ,
14
1*
1.
01
b110 $
b110 '
b1001 #
b1001 &
#40
1:
17
08
16
13
04
12
b111 -
1/
1"
1;
1(
0)
1+
b1000 !
b1000 ,
00
0.
11
1%
b10 $
b10 '
b1010 #
b1010 &
#60
10
b1001 !
b1001 ,
08
0*
1.
15
b110 $
b110 '
b1111 #
b1111 &
#80
